name: Build, Push to Docker Hub, Deploy to Hugging Face

on:
  push:
    branches:
      - main  # Adjust if your main branch is named differently

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Backend Docker Image
        run: |
          docker build -t harithkavish/skinnet-analyzer:backend-latest ./backend
          docker push harithkavish/skinnet-analyzer:backend-latest

      - name: Report Backend Build and Push
        uses: actions/github-script@v7
        with:
          script: |
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.ref,
              required_contexts: [],
              environment: 'production-backend',
              auto_merge: false
            });
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.data.id,
              state: 'success',
              description: 'Backend Docker image built and pushed.',
            });

      - name: Build and Push ML Docker Image
        run: |
          docker build -t harithkavish/skinnet-analyzer:ml-latest ./ml
          docker push harithkavish/skinnet-analyzer:ml-latest

      - name: Report ML Build and Push
        uses: actions/github-script@v7
        with:
          script: |
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.ref,
              required_contexts: [],
              environment: 'production-ml',
              auto_merge: false
            });
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.data.id,
              state: 'success',
              description: 'ML Docker image built and pushed.',
            });

      - name: Trigger Hugging Face Space Redeploy
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          HF_SPACE_ID: ${{ secrets.HF_SPACE_ID }}
        run: |
          curl -X POST https://api.huggingface.co/spaces/$HF_SPACE_ID/restart \
            -H "Authorization: Bearer $HF_TOKEN"

      - name: Report Hugging Face Space Deployment
        uses: actions/github-script@v7
        with:
          script: |
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.ref,
              required_contexts: [],
              environment: 'huggingface-deploy',
              auto_merge: false
            });
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.data.id,
              state: 'success',
              description: 'ML app deployed to Hugging Face Space.',
              environment_url: `https://huggingface.co/spaces/${process.env.HF_SPACE_ID}`
            });
